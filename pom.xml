<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>TestAutomation</groupId>
    <artifactId>SDET-TASK-1</artifactId>
    <version>0.0.1</version>
    <!--<build>
        <plugins>

        </plugins>
    </build>-->
    <packaging>jar</packaging>

    <name>SDET TASK-1</name>
    <description>Running the scenarios and generating the test reports</description>
    <url>http://www.github.com/shash431</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <cucumber.version>1.2.5</cucumber.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.141.59</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.aventstack</groupId>
            <artifactId>extentreports</artifactId>
            <version>[3.1.1,)</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.aventstack</groupId>
            <artifactId>extentreports</artifactId>
            <version>3.1.5</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.saucelabs/sauce_junit -->
        <dependency>
            <groupId>com.saucelabs</groupId>
            <artifactId>sauce_junit</artifactId>
            <version>2.1.25</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.saucelabs/saucerest -->
        <dependency>
            <groupId>com.saucelabs</groupId>
            <artifactId>saucerest</artifactId>
            <version>1.0.39</version>
        </dependency>

        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.temyers</groupId>
            <artifactId>cucumber-jvm-parallel-plugin</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.opencsv/opencsv -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>3.3</version>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>testScenarios</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.3</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.3</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--<plugin>
                        <groupId>com.github.temyers</groupId>
                        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                        <version>5.0.0</version>
                        <executions>
                            <execution>
                                <id>generateRunners</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>generateRunners</goal>
                                </goals>
                                <configuration>
                                    &lt;!&ndash; Mandatory &ndash;&gt;
                                    &lt;!&ndash; List of package names to scan for glue code. &ndash;&gt;
                                    <glue>
                                        <package>com.test.trivago.stepdefinitions</package>
                                    </glue>
                                    &lt;!&ndash; These are optional, with the default values &ndash;&gt;
                                    &lt;!&ndash; Where to output the generated tests &ndash;&gt;
                                    <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
                                    &lt;!&ndash; The directory, which must be in the root of the runtime classpath, containing your feature files.  &ndash;&gt;
                                    <featuresDirectory>src/test/resources/features/</featuresDirectory>
                                    &lt;!&ndash; Directory where the cucumber report files shall be written  &ndash;&gt;
                                    <cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
                                    &lt;!&ndash; List of cucumber plugins. When none are provided the json formatter is used. For more
                                         advanced usage see section about configuring cucumber plugins &ndash;&gt;
                                    <plugins>
                                        <plugin>
                                            <name>json</name>
                                        </plugin>
                                        <plugin>
                                            <name>com.example.CustomHtmlFormatter</name>
                                            <extension>html</extension>
                                        </plugin>
                                    </plugins>
                                    &lt;!&ndash; CucumberOptions.strict property &ndash;&gt;
                                    <strict>true</strict>
                                    &lt;!&ndash; CucumberOptions.monochrome property &ndash;&gt;
                                    <monochrome>true</monochrome>
                                    &lt;!&ndash; The tags to run, maps to CucumberOptions.tags property. Default is no tags. &ndash;&gt;
                                    <tags>
                                        <tag>@test</tag>
                                    </tags>
                                    &lt;!&ndash; Generate TestNG runners instead of JUnit ones. &ndash;&gt;
                                    <useTestNG>false</useTestNG>
                                    &lt;!&ndash; The naming scheme to use for the generated test classes.  One of ['simple', 'feature-title', 'pattern'] &ndash;&gt;
                                    <namingScheme>simple</namingScheme>
                                    &lt;!&ndash; The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.&ndash;&gt;
                                    <namingPattern>Parallel{c}IT</namingPattern>
                                    &lt;!&ndash; One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. &ndash;&gt;
                                    <parallelScheme>SCENARIO</parallelScheme>
                                    &lt;!&ndash; Specify a custom template for the generated sources (this is a path relative to the project base directory) &ndash;&gt;
                                    <customVmTemplate>src/main/resources/cucumber-custom-runner.vm</customVmTemplate>
                                    &lt;!&ndash; Specify a custom package name for generated sources. Default is no package.&ndash;&gt;
                                    <packageName>com.test.trivago</packageName>
                                   &lt;!&ndash; &lt;!&ndash; Generate JUnitReRun runners instead of JUnit and TestNG single runner. &ndash;&gt;
                                    <useJUnitReRun>true</useJUnitReRun>
                                    &lt;!&ndash; It is meaningless to keep reruning without looking for root cause of the failure. Test case/features/scenarios won't pass magically so you can use max 5 rerun. &ndash;&gt;
                                    <retryCount>2</retryCount>&ndash;&gt;

                                </configuration>
                            </execution>
                        </executions>
                    </plugin>-->
                    <!--<plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.0</version>
                        <executions>
                            <execution>
                                <id>acceptance-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <forkCount>2</forkCount>
                                    <reuseForks>true</reuseForks>
                                    <includes>
                                        <include>**/Run*Test.class</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.20</version>
                        <configuration>
                            <!-- <testClassesDirectory>s360UIAutomationCC/src/main/java</testClassesDirectory> -->
                            <!--
                                                        <testSourceDirectory>s360UIAutomationCC/src/main/java</testSourceDirectory>
                            -->
                            <includes>
                                <include>**/*RunCukesTest.java</include>
                            </includes>
                            <!-- <excludes> <exclude>**/*RunCukesTest.java</exclude> </excludes> -->
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

</project>
